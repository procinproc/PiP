.TH "pip_wait" 3 "Fri Jun 10 2022" "Version 2.4.1" "Process-in-Process" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pip_wait \- pip_wait
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBpip_wait\fP (int pipid, int *status)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "int pip_wait (int pipid, int * status)"

.PP
\fBDescription\fP
.RS 4
This function can be used regardless to the PiP execution mode\&. This function blocks until the specified PiP task terminates\&. The macros such as \fCWIFEXITED\fP and so on defined in Glibc can be applied to the returned \fCstatus\fP value\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fIpipid\fP PiP ID to wait for\&. 
.br
\fIstatus\fP Status value of the terminated PiP task
.RE
.PP
\fBReturns\fP
.RS 4
Return 0 on success\&. Return an error code on error\&. 
.RE
.PP
\fBReturn values\fP
.RS 4
\fIEPERM\fP PiP library is not initialized yet, or This function is called other than PiP root\&. 
.br
\fIEDEADLK\fP The specified \fCpipid\fP is the one of PiP root 
.br
\fIECHILD\fP The target PiP task does not exist or it was already terminated and waited for
.RE
.PP
\fBSee also\fP
.RS 4
\fBpip_exit\fP 
.PP
\fBpip_trywait\fP 
.PP
\fBpip_wait_any\fP 
.PP
\fBpip_trywait_any\fP 
.PP
wait(Linux 3)
.RE
.PP
\fBAuthor\fP
.RS 4
Atsushi Hori 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Process-in-Process from the source code\&.
